{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/demo/index.ts"],"names":[],"mappings":";AAAA,8BAA0B,eAAe,CAAC,CAAA;AAE1C,MAAO,MAAM,WAAW,QAAQ,CAAC,CAAC;AAClC,MAAO,MAAM,WAAW,QAAQ,CAAC,CAAC;AAClC,MAAO,UAAU,WAAW,aAAa,CAAC,CAAC;AAE3C,IAAI,SAAS,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC1C,4BAAwC,kBAAkB,CAAC,CAAA;AAC3D,6CAAuC,+CAA+C,CAAC,CAAA;AAMvF,qBAAS,CAAC,SAAS,CAAC,yBAAW,EAAE,CAAC,GAAwB,EAAE,MAAwB,EAAE,SAAoB;IAGxG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;IAE5B,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;IAElB,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;IAE3B,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC;QAChB,OAAO,EAAE,eAAe;QACxB,QAAQ,EAAE,YAAY;KACvB,CAAC,CAAC,CAAC;IAGJ,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK;QACnB,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,qDAAwB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;IACpG,CAAC,CAAC,CAAC;IAGH,GAAG,CAAC,GAAG,CAAC,oBAAoB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI;QAC3C,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAA;AAEJ,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC","sourcesContent":["import {environment} from \"./environment\";\nimport * as express from \"express\";\nimport morgan = require(\"morgan\");\nimport helmet = require(\"helmet\");\nimport bodyParser = require(\"body-parser\");\nimport {Container} from \"inversify\";\nlet inflector = require(\"json-inflector\");\nimport {Camembert, CamembertRoute} from \"../app/camembert\";\nimport {CamembertRouteMiddleware} from \"../app/middlewares/camembert-route.middleware\";\n\n\n/**\n * @Internal()\n */\nCamembert.configure(environment, (app: express.Application, routes: CamembertRoute[], container: Container) => {\n\n  //My middleware\n  app.use(morgan('combined'));\n\n  app.use(helmet());\n\n  app.use(bodyParser.json());\n\n  app.use(inflector({\n    request: 'camelizeLower',\n    response: 'underscore'\n  }));\n\n  //Register routes\n  routes.forEach((route) => {\n    app[route.httpMethod](route.path, CamembertRouteMiddleware(route).bind(route.controllerInstance));\n  });\n\n  //Route without camembert decorators\n  app.get('/not/camembert/:id', (req, res, next) => {\n    res.send('NOT CAMEMBERT');\n  })\n\n}).start();\n"]}