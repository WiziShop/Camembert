{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/demo/index.ts"],"names":[],"mappings":";;AAAA,+CAA0C;AAE1C,iCAAkC;AAClC,iCAAkC;AAClC,0CAA2C;AAC3C,IAAI,SAAS,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC1C,gDAAiF;AAGjF,qBAAS,CAAC,SAAS,CAAC,yBAAW,EAAE,CAAC,GAAwB,EAAE,MAA0B,EAAE,SAA6B;IAGnH,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;IAE5B,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;IAElB,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;IAE3B,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC;QAChB,OAAO,EAAE,eAAe;QACxB,QAAQ,EAAE,YAAY;KACvB,CAAC,CAAC,CAAC;IAIJ,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK;QACnB,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC","sourcesContent":["import {environment} from \"./environment\";\nimport * as express from \"express\";\nimport morgan = require(\"morgan\");\nimport helmet = require(\"helmet\");\nimport bodyParser = require(\"body-parser\");\nlet inflector = require(\"json-inflector\");\nimport {Camembert, CamembertRouting, CamembertContainer} from \"../app/camembert\";\n\n\nCamembert.configure(environment, (app: express.Application, routes: CamembertRouting[], container: CamembertContainer) => {\n\n  //Register you own middleware here\n  app.use(morgan('combined'));\n\n  app.use(helmet());\n\n  app.use(bodyParser.json());\n\n  app.use(inflector({\n    request: 'camelizeLower',\n    response: 'underscore'\n  }));\n\n\n  //Register the routes\n  routes.forEach((route) => {\n    app[route.httpMethod](route.path, route.middleware);\n  });\n\n}).start();\n"]}