{"version":3,"file":"camembert-controller.decorator.js","sourceRoot":"","sources":["../../../src/lib/decorators/camembert-controller.decorator.ts"],"names":[],"mappings":";;AAAA,4BAA0B;AAC1B,qFAAqE;AAExD,QAAA,8BAA8B,GAAG,MAAM,CAAC,gCAAgC,CAAC,CAAC;AAEvF;;;;;;GAMG;AACH,SAAgB,mBAAmB,CAAC,IAAa;IAC/C,OAAO,UAAU,MAAc;QAE7B,oDAAmB,EAAE,CAAC,MAAM,CAAC,CAAC;QAE9B,IAAI,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC,sCAA8B,EAAE,mBAAmB,CAAC,IAAI,EAAE,CAAC;QAE7F,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAErB,OAAO,CAAC,cAAc,CAAC,sCAA8B,EAAE,OAAO,EAAE,mBAAmB,CAAC,CAAC;QAErF,OAAO,CAAC,cAAc,CAAC,sCAA8B,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;IACvE,CAAC,CAAA;AACH,CAAC;AAbD,kDAaC","sourcesContent":["import \"reflect-metadata\";\nimport {CamembertInjectable} from \"./camembert-injectable.decorator\";\n\nexport const CamembertControllerMetadataKey = Symbol('CamembertControllerMetadataKey');\n\n/**\n * Camembert controller decorator\n *\n * @param path the path to prepend to all child routes i.e.: /admin\n * @returns {(target:Object)=>undefined}\n * @constructor\n */\nexport function CamembertController(path?: string) {\n  return function (target: Object) {\n\n    CamembertInjectable()(target);\n\n    let targets = Reflect.getMetadata(CamembertControllerMetadataKey, CamembertController) || [];\n\n    targets.push(target);\n\n    Reflect.defineMetadata(CamembertControllerMetadataKey, targets, CamembertController);\n\n    Reflect.defineMetadata(CamembertControllerMetadataKey, path, target);\n  }\n}\n"]}