{"version":3,"file":"camembert-route.decorator.js","sourceRoot":"","sources":["../../../src/app/decorators/camembert-route.decorator.ts"],"names":[],"mappings":";AAAA,QAAO,kBAAkB,CAAC,CAAA;AAEb,0BAAkB,GAAW,QAAQ,CAAC;AAUnD,wBAA+B,MAAc,EAAE,IAAa,EAAE,IAAU;IACtE,MAAM,CAAC,UAAU,MAAc,EAAE,WAAmB;QAElD,IAAI,KAAK,GAAyB;YAChC,UAAU,EAAE,MAAM;YAClB,IAAI,EAAE,IAAI,IAAI,EAAE;YAChB,UAAU,EAAE,MAAM,CAAC,iBAAiB,EAAE;YACtC,UAAU,EAAE,MAAM,CAAC,WAAW,CAAC;YAC/B,IAAI,EAAE,IAAI;SACV,CAAC;QAEH,IAAI,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,0BAAkB,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,CAAC;QAChF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEnB,OAAO,CAAC,cAAc,CAAC,0BAAkB,EAAE,MAAM,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1E,CAAC,CAAA;AACH,CAAC;AAhBe,sBAAc,iBAgB7B,CAAA","sourcesContent":["import \"reflect-metadata\";\n\nexport const CamembertRoutesKey: string = 'routes';\n\nexport interface CamembertRouteConfig {\n  controller: Object;\n  path: string;\n  httpMethod: string;\n  middleware: Function;\n  data: any;\n}\n\nexport function CamembertRoute(method: string, path?: string, data?: any) {\n  return function (target: Object, propertyKey: string) {\n\n    let route: CamembertRouteConfig = {\n      controller: target,\n      path: path || '',\n      httpMethod: method.toLocaleLowerCase(),\n      middleware: target[propertyKey],\n      data: data\n     };\n\n    let routes = Reflect.getMetadata(CamembertRoutesKey, target[propertyKey]) || [];\n    routes.push(route);\n\n    Reflect.defineMetadata(CamembertRoutesKey, routes, target[propertyKey]);\n  }\n}\n"]}