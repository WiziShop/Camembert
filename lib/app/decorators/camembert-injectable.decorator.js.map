{"version":3,"file":"camembert-injectable.decorator.js","sourceRoot":"","sources":["../../../src/app/decorators/camembert-injectable.decorator.ts"],"names":[],"mappings":";AAAA,QAAO,kBAAkB,CAAC,CAAA;AAC1B,4BAAyB,WAAW,CAAC,CAAA;AAGxB,sCAA8B,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC;AAE5E;IACE,MAAM,CAAC,UAAU,MAAc;QAE7B,sBAAU,EAAE,CAAC,MAAM,CAAC,CAAC;QAErB,IAAI,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC,sCAA8B,EAAE,mBAAmB,CAAC,IAAI,EAAE,CAAC;QAE7F,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAErB,OAAO,CAAC,cAAc,CAAC,sCAA8B,EAAE,OAAO,EAAE,mBAAmB,CAAC,CAAC;IAEvF,CAAC,CAAA;AACH,CAAC;AAZe,2BAAmB,sBAYlC,CAAA","sourcesContent":["import \"reflect-metadata\";\nimport {injectable} from 'inversify';\n\n\nexport const CamembertInjectableMetadataKey = Symbol('CamembertInjectable');\n\nexport function CamembertInjectable() {\n  return function (target: Object) {\n\n    injectable()(target);\n\n    let targets = Reflect.getMetadata(CamembertInjectableMetadataKey, CamembertInjectable) || [];\n\n    targets.push(target);\n\n    Reflect.defineMetadata(CamembertInjectableMetadataKey, targets, CamembertInjectable);\n\n  }\n}\n"]}