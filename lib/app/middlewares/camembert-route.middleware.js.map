{"version":3,"file":"camembert-route.middleware.js","sourceRoot":"","sources":["../../../src/app/middlewares/camembert-route.middleware.ts"],"names":[],"mappings":";AAAA,4BAA6C,cAAc,CAAC,CAAA;AAC5D,4BAAwB,wBAAwB,CAAC,CAAA;AAEjD,kCAAyC,KAAqB;IAE5D,IAAI,WAAW,GAAG,0BAAc,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAE3D,MAAM,CAAC,UAAU,GAAG,EAAE,GAAG,EAAE,IAAI;QAE7B,IAAI,YAAY,GAAU,EAAE,CAAC;QAE7B,GAAG,CAAC,CAAC,IAAI,WAAW,IAAI,WAAW,CAAC,CAAC,CAAC;YACpC,EAAE,CAAC,CAAC,WAAW,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC/B,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACvB,QAAQ,CAAC;YACX,CAAC;YACD,EAAE,CAAC,CAAC,WAAW,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC/B,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACvB,QAAQ,CAAC;YACX,CAAC;YACD,EAAE,CAAC,CAAC,WAAW,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;gBAChC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACxB,QAAQ,CAAC;YACX,CAAC;YAED,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC9D,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;gBAChD,QAAQ,CAAC;YACX,CAAC;YAED,EAAE,CAAC,CAAC,OAAO,WAAW,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC;gBAC3C,IAAI,SAAS,GAAG,IAAI,qBAAS,EAAE,CAAC;gBAEhC,IAAI,QAAQ,GAAG,IAAI,WAAW,CAAC,IAAI,EAAE,CAAC;gBACtC,GAAG,CAAC,CAAC,IAAI,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAC3C,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACtC,QAAQ,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAC1C,CAAC;gBACH,CAAC;gBAED,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACjC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;oBACvB,MAAM,CAAC;gBACT,CAAC;gBACD,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC5B,QAAQ,CAAC;YACX,CAAC;YAGD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;YACvB,MAAM,CAAC;QACT,CAAC;QAED,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC,CAAA;AAEH,CAAC;AArDe,gCAAwB,2BAqDvC,CAAA;AAAA,CAAC","sourcesContent":["import {CamembertRoute, CamembertUtils} from \"../camembert\";\nimport {Validator} from \"validator.ts/Validator\";\n\nexport function CamembertRouteMiddleware(route: CamembertRoute) {\n\n  let routeParams = CamembertUtils.getRouteParameters(route);\n\n  return function (req, res, next) {\n\n    let actionParams: any[] = [];\n\n    for (let routerParam of routeParams) {\n      if (routerParam.name === 'req') {\n        actionParams.push(req);\n        continue;\n      }\n      if (routerParam.name === 'res') {\n        actionParams.push(res);\n        continue;\n      }\n      if (routerParam.name === 'next') {\n        actionParams.push(next);\n        continue;\n      }\n\n      if (req.params && req.params.hasOwnProperty(routerParam.name)) {\n        actionParams.push(req.params[routerParam.name]);\n        continue;\n      }\n\n      if (typeof routerParam.type === 'function') {\n        let validator = new Validator();\n\n        let formInst = new routerParam.type();\n        for (let property of Object.keys(formInst)) {\n          if (req.body.hasOwnProperty(property)) {\n            formInst[property] = req.body[property];\n          }\n        }\n\n        if (!validator.isValid(formInst)) {\n          res.status(400).send();\n          return;\n        }\n        actionParams.push(formInst);\n        continue;\n      }\n\n\n      res.status(400).send();\n      return;\n    }\n\n    route.middleware.apply(this, actionParams);\n  }\n\n};\n"]}